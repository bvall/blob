blueprint:
  name: Motion sensor controls the light
  description: >
    Predefined scene is switched on based on movement and illuminance. And after no movement is registered, the so-called dimmed scene is switched on. 
    And after that, the light is switched off. This blueprint uses auxiliary entities that need to be created for some input values themselves in order to set limits dynamically.
    
    This is a fork of this blueprint.

    https://community.home-assistant.io/t/turn-on-light-switch-scene-script-or-group-based-on-motion-and-illuminance-more-conditions

    Thank you very much.

  domain: automation
  input:
    motion_sensor:
      name: Motion Sensor
      description: This sensor will trigger the turning on of the target entity.
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
    target_entity:
      name: Enter the scene for the target entity.
      description: The light, switch, scene to turn on (or script to run) when the automation is triggered.
      selector:
        entity:
    target_entity_dimmed:
      name: Enter the dimmed scene for the target entity.
      description: The light, switch, scene to turn on (or script to run) after the wait time.
      selector:
        entity:   
    illuminance_sensor:
      name: (OPTIONAL) Illuminance sensor
      description: This sensor will be used to determine the illumination.
      default:
      selector:
        entity:
          domain: sensor
          device_class: illuminance
    illuminance_cutoff:
      name: (OPTIONAL) Illuminance cutoff value
      description: This input_number will be used to compare to the current illumination to determine if it is low.
      default:
      selector:
        entity:
          domain: input_number
    blocker_entity:
      name: (OPTIONAL) Blocking entity
      description: If this entity's state is on, it will prevent the automation from running. E.g. sleepmode or away mode.
      default:
      selector:
        entity:
    time_limit_before:
      name: (OPTIONAL) Only run before time.
      description: Automation will only run when time is earlier than this input_datetime value.
      default:
      selector:
        entity:
          domain: input_datetime
    time_limit_after:
      name: (OPTIONAL) Only run after time.
      description: Automation will only run when time is later than this input_datetime value.
      default:
      selector:
        entity:
          domain: input_datetime
    no_motion_wait:
      name: (OPTIONAL) Turn off wait time
      description: Time to leave the light on after last motion is detected. If not used entity will not auto turn off. Only works for target_entity types light and switch.
      default:
      selector:
        entity:
          domain: input_number
    turn_off_blocker_entity:
      name: (OPTIONAL) Turn-off Blocking entity
      description: If this entity's state is on, it will prevent the target entity from turning off after the set delay.
      default:
      selector:
        entity:
    target_off_entity:
      name: (OPTIONAL) Turn-off entity
      description: If defined, this entity will be turned off instead of the default target entity. This can be helpful when using target entities of type scene or script.
      default:
      selector:
        entity:

mode: restart
max_exceeded: silent

variables:
  target_entity: !input target_entity
  target_entity_dimmed: !input target_entity_dimmed  
  illuminance_currently: !input illuminance_sensor
  illuminance_cutoff: !input illuminance_cutoff
  blocker_entity: !input blocker_entity
  time_limit_before: !input time_limit_before
  time_limit_after: !input time_limit_after
  no_motion_wait: !input no_motion_wait
  entity_domain: "{{ states[target_entity].domain }}"
  turn_off_blocker_entity: !input turn_off_blocker_entity
  target_off_entity: !input target_off_entity

trigger:
  platform: state
  entity_id: !input motion_sensor
  to: 'on'

condition:
# First condition: When entity was already on because the automation ran recently, do not check illuminance because it could have increased above threshold because of a light that was just turned on.
  - condition: template
    value_template: "{{ (states[target_entity].state == 'on') or (illuminance_currently == none) or (illuminance_cutoff == none) or (states[illuminance_currently].state | int < states[illuminance_cutoff].state | int) }}"
  - condition: template
    value_template: "{{ (blocker_entity == none) or (states[blocker_entity].state == 'off') }}"
  - condition: template
    value_template: >
      {% set current_time = now().strftime("%H:%M")  %}

      {% if time_limit_before != none and time_limit_after == none %}
      {{ states[time_limit_before].state > current_time }}
      {% elif time_limit_before == none and time_limit_after != none %}
      {{ states[time_limit_after].state < current_time }}
      {% elif time_limit_before != none and time_limit_after != none %}
      {% set before_limit_is_on_next_day = states[time_limit_after].state > states[time_limit_before].state  %}
      {{ (before_limit_is_on_next_day or states[time_limit_before].state > current_time) and states[time_limit_after].state < current_time }}
      {% else %}
      true
      {% endif %}

action:
  - service: homeassistant.turn_on
    entity_id: !input target_entity
  - condition: template
    value_template: "{{ no_motion_wait != none }}"
  - wait_for_trigger:
      platform: state
      entity_id: !input motion_sensor
      from: "on"
      to: "off"
  - service: homeassistant.turn_on
    entity_id: !input target_entity_dimmed
  - delay: 
      minutes: '{{ states[no_motion_wait].state | int }}'
  - condition: template
    value_template: "{{ (turn_off_blocker_entity == none) or (states[turn_off_blocker_entity].state == 'off') }}"
  - choose:
    - conditions:
        - condition: template
          value_template: "{{ (target_off_entity != none) }}"
      sequence:
        - service: homeassistant.turn_off
          entity_id: !input target_off_entity
    default:
      - service: homeassistant.turn_off
        entity_id: !input target_entity
